import streamlit as st
from audio_conversion import *
import speech_recognition as sr

def st_speech():
    st.title("Speech Recognition MASP Test")

    file_load_state = st.text('Procurando √Åudio...\nPor Favor Colocar Link Para √Åudio')

    file_path = ""
    
    met = st.sidebar.selectbox(
        'Qual √© o m√©todo?',
        ('Live Capture', 'File Path')
    )
    
    
    if met == 'File Path':

        file_path = st.sidebar.text_input(
            "Coloque o File Path do √°udio aqui! üëá"
        )

        if file_path:
            st.write("\n\nYou entered: ", file_path)




    algorithm = st.sidebar.selectbox(
        'Qual √© o idioma?',
        ('Portugu√™s', 'English')
    )


    if algorithm == 'English':
        language = 'en'
    else:
        language = "pt-BR"




    if st.sidebar.button("Transcrever √Åudio"):
        if met == 'Live Capture':
            # Habilita o microfone para ouvir o usu√°rio
            microfone = sr.Recognizer()
            with sr.Microphone() as source:
                # Chama a fun√ß√£o de redu√ß√£o de ru√≠do dispon√≠vel no speech_recognition
                microfone.adjust_for_ambient_noise(source)
                # Avisa ao usu√°rio que est√° pronto para ouvir
                st.write("Diga alguma coisa: ")
                # Armazena a informa√ß√£o de √°udio na vari√°vel
                audio = microfone.listen(source)
                
            try:
                # Passa o √°udio para o reconhecedor de padr√µes do speech_recognition
                frase = microfone.recognize_google(audio, language='pt-BR')
                # Ap√≥s alguns segundos, retorna a frase falada
                st.write("Voc√™ disse: " + frase)
            # Caso n√£o tenha reconhecido o padr√£o de fala, exibe esta mensagem
            except sr.UnknownValueError:
                st.write("N√£o entendi")
            except sr.RequestError:
                st.write("N√£o foi poss√≠vel se conectar ao servi√ßo de reconhecimento de fala.")
        else:
            st.write("O √°udio diz: " + transcribe_audio(file_path, language))
            
st_speech()